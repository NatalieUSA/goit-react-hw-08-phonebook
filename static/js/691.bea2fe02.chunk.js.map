{"version":3,"file":"static/js/691.bea2fe02.chunk.js","mappings":"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","sources":["components/Phonebook/PhonebookFilter/PhonebookFilter.styled.js","redux/filter/FilterSelectors.js","components/Phonebook/PhonebookFilter/PhonebookFilter.js","components/Phonebook/PhonebookForm/initialState.js","components/Phonebook/PhonebookForm/PhonebookForm.styled.js","components/Phonebook/PhonebookForm/PhonebookForm.js","components/Phonebook/PhonebookList/PhonebookList.styled.js","shared/Button/Button.styled.js","redux/contacts/ContactsSelector.js","shared/Title/Title.styled.js","shared/Title/Title.js","components/Phonebook/PhonebookList/PhonebookList.js","components/Layout.js","components/Phonebook/PhoneBook.jsx","Pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormGroup = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  overflow: overlay;\n  gap: 10px;\n  width: 65%;\n  height: 15%;\n  box-sizing: border-box;\n  list-style: none;\n  margin: 30px auto;\n  padding: 40px;\n  background-color: rgb(13, 55, 255, 0.95);\n\n  border-radius: 25px;\n  box-shadow: inset 6px 6px 6px 0px #68b4cf, inset -6px -10px 10px 0px #68b4cf;\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: rgb(255 255 255 / 8%); /* цвет бегунка */\n    border-radius: 3px; /* округлось бегунка */\n    border: 2px solid #cd5a79; /* отступ вокруг бегунка */\n  }\n\n  @media (max-width: 419px) {\n    width: 95%;\n  }\n  @media (min-width: 420px) {\n    width: 75%;\n  }\n  @media (min-width: 768px) {\n    width: 65%;\n  }\n  @media (min-width: 1020px) {\n    width: 60%;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 80%;\n  background: transparent;\n  border: none;\n  border-bottom: 0.5px solid deeppink;\n\n  outline: transparent;\n  margin-right: auto;\n  margin-left: auto;\n  font-size: large;\n  color: deeppink;\n\n  // @media (max-width: 1020px) {\n  //   width: 95%;\n  // }\n`;\n\nexport const Label = styled.label``;\n","export const getFilter = ({ filter }) => filter;\n","import { FormGroup, Label, Input } from './PhonebookFilter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { getFilter } from 'components/redux/filter/FilterSelectors';\nimport { getFilter } from 'redux/filter/FilterSelectors';\nimport { setFilter } from 'redux/filter/FilterSlice';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { setFilter } from 'components/redux/filter/FilterSlice';\n\nexport const PhonebookFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <FormGroup>\n      <Label></Label>\n      <Input\n        value={filter}\n        name=\"filter\"\n        type=\"text\"\n        onChange={handleFilter}\n        placeholder=\"find contacts by name\"\n        autoComplete=\"off\"\n      />\n    </FormGroup>\n  );\n};\n","export const initialState = {\n  name: '',\n  number: '',\n};\n","import styled from 'styled-components';\n\nexport const FormGroup = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  overflow: overlay;\n  gap: 10px;\n  width: 55%;\n  height: 15%;\n  box-sizing: border-box;\n  list-style: none;\n  margin: 30px auto;\n  padding: 40px;\n  background-color: rgb(2, 221, 250, 0.95);\n  border-radius: 25px;\n  box-shadow: inset 6px 6px 6px 0px rgb(250, 9, 137),\n    inset -6px -10px 10px 0px rgb(250, 9, 137);\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: rgb(255 255 255 / 8%); /* цвет бегунка */\n    border-radius: 3px; /* округлось бегунка */\n    border: 2px solid #cd5a79; /* отступ вокруг бегунка */\n  }\n\n  @media (max-width: 419px) {\n    width: 95%;\n  }\n  @media (min-width: 420px) {\n    width: 75%;\n  }\n  @media (min-width: 768px) {\n    width: 65%;\n  }\n  @media (min-width: 1020px) {\n    width: 60%;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 80%;\n  background: transparent;\n  border: none;\n  border-bottom: 0.5px solid deeppink;\n\n  outline: transparent;\n  margin-right: auto;\n  margin-left: auto;\n  font-size: large;\n  color: deeppink;\n\n  @media (max-width: 320px) {\n    width: 95%;\n  }\n`;\n\nexport const Label = styled.label``;\n\nexport const FormBtn = styled.button`\n  text-align: center;\n  margin-top: 30px;\n  height: 50px;\n  width: 140px;\n  border-radius: 25px;\n  cursor: pointer;\n\n  font-size: small;\n  text-transform: uppercase;\n\n  background-color: orange;\n  color: white;\n\n  border-style: none;\n  box-shadow: 3px 3px 3px grey;\n\n  :hover {\n    text-transform: lowercase;\n    background-color: deeppink;\n    color: white;\n  }\n`;\n","import { useState, useEffect } from 'react';\n\nimport { initialState } from './initialState';\nimport { FormGroup, Input, Label } from './PhonebookForm.styled';\nimport { FormBtn } from './PhonebookForm.styled';\n\nimport { useDispatch } from 'react-redux';\n\nimport {\n  fetchContacts,\n  fetchAddContact,\n} from 'redux/contacts/ContactsOperations';\n\nexport const PhonebookForm = () => {\n  const [state, setState] = useState({ ...initialState });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleAddContact = ({ name, number }) => {\n    dispatch(fetchAddContact({ name, number }));\n  };\n\n  const handleChange = ({ target }) => {\n    const { value, name } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleAddContact({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormGroup>\n        <Input\n          onChange={handleChange}\n          placeholder=\"enter name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <Label></Label>\n        <Input\n          onChange={handleChange}\n          placeholder=\"enter number\"\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <FormBtn type=\"submit\" onSubmit={handleAddContact}>\n          Add contact\n        </FormBtn>\n      </FormGroup>\n    </form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const List = styled.ul`\n  position: relative;\n  display: block;\n  overflow: overlay;\n  // max-height: 350px;\n  box-sizing: border-box;\n  list-style: none;\n  margin: 0 auto;\n  padding: 40px;\n  border-radius: 25px;\n  box-shadow: inset 6px 6px 6px 0px #68b4cf, inset -6px -10px 10px 0px #68b4cf;\n\n  width: 55%;\n  height: 15%;\n  background-color: #f10684;\n  color: yellow;\n  margin-bottom: 30px;\n\n  @media (max-width: 419px) {\n    width: 95%;\n  }\n\n  @media (min-width: 420px) {\n    width: 75%;\n  }\n  @media (min-width: 768px) {\n    width: 65%;\n  }\n  @media (min-width: 1020px) {\n    width: 60%;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  cursor: pointer;\n  display: inline-block;\n  outline: none;\n  border-radius: 50px;\n  background-color: #68b4cf;\n  color: yellow;\n\n  text-align: center;\n  border-style: none;\n  box-shadow: 2px 2px 1px grey;\n  font-size: x-small;\n  height: 35px;\n  width: 50px;\n  line-height: 1;\n\n  :hover {\n    text-transform: lowercase;\n    background-color: yellow;\n    color: #68b4cf;\n  }\n`;\n","export const getAllContacts = store => store.contacts;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name }) => {\n    return name.toLowerCase().includes(normalizedFilter);\n  });\n  return result;\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  width: 60%;\n  margin: 30px auto;\n  padding: 5px;\n  background-color: deeppink;\n  border-radius: 25px;\n  box-shadow: inset 6px 6px 6px 0px #68b4cf, inset -6px -10px 10px 0px #68b4cf;\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: rgb(255 255 255 / 8%); /* цвет бегунка */\n    border-radius: 3px; /* округлось бегунка */\n    border: 2px solid #cd5a79; /* отступ вокруг бегунка */\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Wrap } from './Title.styled';\n\nexport const Title = ({ children }) => {\n  return (\n    <Wrap>\n      <h2>{children}</h2>\n    </Wrap>\n  );\n};\n\nTitle.protoTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { BsTelephone } from 'react-icons/bs';\nimport { ListItem } from './PhonebookList.styled';\nimport { List } from './PhonebookList.styled';\n// import { Btn } from 'components/shared/Button/Button.styled';\nimport { Btn } from 'shared/Button/Button.styled';\nimport { getFilteredContacts } from 'redux/contacts/ContactsSelector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Title } from 'shared/Title/Title';\nimport { fetchDeleteContact } from 'redux/contacts/ContactsOperations';\n\nexport const PhonebookList = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const removeContact = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n\n  const isContacts = Boolean(filteredContacts.length);\n\n  const contact = filteredContacts.map(({ id, name, number }) => (\n    <ListItem key={id} c>\n      {name}\n      <BsTelephone /> {number}\n      <Btn type=\"submit\" onClick={() => removeContact(id)}>\n        delete\n      </Btn>\n    </ListItem>\n  ));\n\n  const contactList = isContacts ? (\n    <List>{contact}</List>\n  ) : (\n    <Title>No contacts in list</Title>\n  );\n\n  return contactList;\n};\n","import styled from 'styled-components';\n\nexport const Layout = styled.div`\n  color: deepgrey;\n  margin-right: auto;\n  margin-left: auto;\n  /* width: 1000px; */\n  font-size: 10px;\n\n  @media (max-width: 767px) {\n    font-size: 11px;\n    width: 320px;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 15px;\n    width: 720px;\n  }\n\n  @media (min-width: 1020px) {\n    width: 1000px;\n    font-size: 15px;\n    padding: 16px;\n  }\n`;\n","import { PhonebookFilter } from './PhonebookFilter/PhonebookFilter';\nimport { PhonebookForm } from './PhonebookForm/PhonebookForm';\nimport { PhonebookList } from './PhonebookList/PhonebookList';\nimport { Title } from 'shared/Title/Title';\nimport { GlobalStyle } from 'components/GlobalStyle';\nimport { Layout } from 'components/Layout';\n\nconst PhoneBook = () => {\n  return (\n    <Layout>\n      <GlobalStyle />\n      <Title>Phonebook</Title>\n\n      <PhonebookForm />\n      <PhonebookFilter />\n      <PhonebookList />\n    </Layout>\n  );\n};\nexport default PhoneBook;\n","import PhoneBook from 'components/Phonebook/PhoneBook';\nconst ContactsPage = () => {\n  return <PhoneBook />;\n};\nexport default ContactsPage;\n"],"names":["FormGroup","styled","Input","Label","getFilter","filter","PhonebookFilter","dispatch","useDispatch","useSelector","value","name","type","onChange","target","setFilter","placeholder","autoComplete","initialState","number","FormBtn","PhonebookForm","useState","state","setState","useEffect","fetchContacts","handleAddContact","fetchAddContact","handleChange","prevState","onSubmit","e","preventDefault","pattern","title","required","ListItem","List","Btn","getFilteredContacts","contacts","items","normalizedFilter","toLowerCase","includes","Wrap","Title","children","protoTypes","PropTypes","PhonebookList","filteredContacts","isContacts","Boolean","length","contact","map","id","c","onClick","fetchDeleteContact","removeContact","Layout","GlobalStyle"],"sourceRoot":""}