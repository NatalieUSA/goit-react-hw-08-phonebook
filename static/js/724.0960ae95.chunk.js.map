{"version":3,"file":"static/js/724.0960ae95.chunk.js","mappings":"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","sources":["components/RegisterForm/fields.js","components/RegisterForm/InitialState.js","components/RegisterForm/register-form.module.css","components/RegisterForm/RegisterForm.jsx","Pages/RegisterPage.jsx","shared/Hooks/useForm.js","webpack://react-homework-template/./src/shared/TextField/text-field.module.css?f539","shared/TextField/TextField.jsx","shared/Wrapper/Wrapper.styled.js","shared/Wrapper/Wrapper.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    required: true,\n    label: 'User name',\n    placeholder: 'User name',\n  },\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'User email',\n    placeholder: 'User email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {};","import TextField from 'shared/TextField/TextField';\nimport Button from 'shared/ButtonForm/ButtonForm';\n\nimport useForm from 'shared/Hooks/useForm';\n\nimport fields from './fields';\nimport initialState from './InitialState';\n\nimport styles from './register-form.module.css';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { name, email, password } = state;\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <TextField value={name} handleChange={handleChange} {...fields.name} />\n        <TextField\n          value={email}\n          handleChange={handleChange}\n          {...fields.email}\n        />\n        <TextField\n          value={password}\n          handleChange={handleChange}\n          {...fields.password}\n        />\n        <Button>Register</Button>\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n\n// import initialState from './InitialState';\n\n// import useForm from 'shared/Hooks/useForm';\n\n// import { Button, Form, Input } from 'antd';\n// const onFinish = values => {\n//   console.log('Success:', values);\n// };\n// const onFinishFailed = errorInfo => {\n//   console.log('Failed:', errorInfo);\n// };\n\n// const RegisterForm = ({ onSubmit }) => {\n//   const { state, handleChange, handleSubmit } = useForm({\n//     initialState,\n//     onSubmit,\n//   });\n//   const { name, email, password } = state;\n\n//   return (\n//     <Form\n//       onSubmit={handleSubmit}\n//       name=\"basic\"\n//       labelCol={{\n//         span: 8,\n//       }}\n//       wrapperCol={{\n//         span: 16,\n//       }}\n//       style={{\n//         maxWidth: 600,\n//       }}\n//       initialValues={{\n//         remember: true,\n//       }}\n//       onFinish={onFinish}\n//       onFinishFailed={onFinishFailed}\n//       autoComplete=\"off\"\n//     >\n//       <Form.Item\n//         label=\"Username\"\n//         name=\"username\"\n//         rules={[\n//           {\n//             required: true,\n//             message: 'Please input your username!',\n//           },\n//         ]}\n//       >\n//         <Input value={name} handlechange=\"handleChange\" />\n//       </Form.Item>\n\n//       <Form.Item\n//         name={['user', 'email']}\n//         label=\"Email\"\n//         rules={[\n//           {\n//             required: true,\n//             message: 'Please input your email!',\n//             type: 'email',\n//           },\n//         ]}\n//       >\n//         <Input value={email} handlechange=\"handleChange\" />\n//       </Form.Item>\n\n//       <Form.Item\n//         label=\"Password\"\n//         name=\"password\"\n//         rules={[\n//           {\n//             required: true,\n//             message: 'Please input your password!',\n//           },\n//         ]}\n//       >\n//         <Input.Password value={password} handlechange=\"handleChange\" />\n//       </Form.Item>\n\n//       <Form.Item\n//         name=\"remember\"\n//         valuePropName=\"checked\"\n//         wrapperCol={{\n//           offset: 8,\n//           span: 16,\n//         }}\n//       ></Form.Item>\n\n//       <Form.Item\n//         wrapperCol={{\n//           offset: 8,\n//           span: 16,\n//         }}\n//       >\n//         <Button type=\"primary\" htmlType=\"submit\">\n//           Register\n//         </Button>\n//       </Form.Item>\n//     </Form>\n//   );\n// };\n\n// export default RegisterForm;\n\n// const onFinish = values => {\n//   console.log(values);\n// };\n\n// const validateMessages = {\n//   required: '${label} is required!',\n//   types: {\n//     email: '${label} is not a valid email!',\n//     number: '${label} is not a valid number!',\n//   },\n//   number: {\n//     range: '${label} must be between ${min} and ${max}',\n//   },\n// };\n","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/AuthOperations';\n\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { Wrapper } from 'shared/Wrapper/Wrapper';\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const handleRegister = data => {\n    dispatch(register(data));\n  };\n\n  return (\n    <Wrapper>\n      <RegisterForm onSubmit={handleRegister} />\n    </Wrapper>\n  );\n};\nexport default RegisterPage;\n","import { useState, useCallback } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"text-field_wrapper__UiQgu\",\"field\":\"text-field_field__0xPaa\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport styles from './text-field.module.css';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div className={styles.wrapper}>\n      <label htmlFor={id}></label>\n      <input\n        className={styles.field}\n        id={id}\n        onChange={handleChange}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default TextField;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  width: 500px;\n  margin: auto;\n  padding: 15px;\n  height: 80vh;\n  text-align: center;\n\n  background-color: deeppink;\n  border-radius: 25px;\n  box-shadow: inset 6px 6px 6px 0px #68b4cf, inset -6px -10px 10px 0px #68b4cf;\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: rgb(255 255 255 / 8%); /* цвет бегунка */\n    border-radius: 3px; /* округлось бегунка */\n    border: 2px solid #cd5a79; /* отступ вокруг бегунка */\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Wrap } from './Wrapper.styled';\n\nexport const Wrapper = ({ children }) => {\n  return (\n    <Wrap>\n      <h4>{children}</h4>\n    </Wrap>\n  );\n};\n\nWrapper.protoTypes = {\n  children: PropTypes.node.isRequired,\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["name","type","required","label","placeholder","email","password","onSubmit","useForm","initialState","state","handleChange","handleSubmit","className","styles","TextField","value","fields","dispatch","useDispatch","Wrapper","data","register","useState","setState","useCallback","target","prevState","e","preventDefault","props","id","useMemo","nanoid","htmlFor","onChange","Wrap","styled","children","protoTypes","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}